# Default target (first target in the file)
# Build the resulting binary (either an executable or a shared library)
build: $(RESULT)

#####
# Explicit rules
#####

# See https://www.gnu.org/software/make/manual/html_node/Catalogue-of-Rules.html#Catalogue-of-Rules for implicit rules

# Include the .d files (header dependencies produced by the -MMD -MP flags in CFLAGS and CXXFLAGS)
-include $(DEPS)

# Object files
$(BUILD_DIR)/%.o: %.cpp
	@mkdir -p $(@D)
	$(COMPILE.cc) $(OUTPUT_OPTION) $<

# Build binary $(RESULT) (either an executable or a shared library)
ifeq ($(filter %.so, $(RESULT)),)
# Executable
#   Dummy target for the library
$(MADUPITE_LIB):
	$(error ERROR: you need to build the shared library $(MADUPITE_LIB_FILE_NAME) first. \
	Either run `make` in $$(PROJECT_ROOT)/src, or `make lib` in $$(PROJECT_ROOT))

$(RESULT): $(OBJS) $(MADUPITE_LIB)
	@mkdir -p $(@D)
	$(LINK.cc) -o $@ $(OBJS) $(MADUPITE_LDFLAGS) $(MADUPITE_LDLIBS) $(GTEST_LDLIBS)

$(RESULT).run: $(RESULT)
	./$(RESULT)

$(RESULT).run2: $(RESULT)
	mpirun -n 2 ./$(RESULT)

.PHONY: $(RESULT).run $(RESULT).run2
else
# Shared library
$(RESULT): $(OBJS)
	@mkdir -p $(@D)
	$(LINK.cc) -shared -o $@ $^ $(LDLIBS)
endif


#####
# Phony targets
#####

# Run the binary
run: $(RESULT).run

# Run the binary on 2 processes
run2: $(RESULT).run2

# Format code
format:
	# Let's stick to 18 for now - should be compatible with the commit hook
	clang-format-18 -i $(FORMATTED_STUFF)

# Clean up
clean:
	rm -rf $(CLEANED_STUFF)

# Debug print
print:
	###################
	@echo BUILD_DIR=$(BUILD_DIR)
	@echo LIB_DIR=$(LIB_DIR)
	@echo INCLUDE_DIR=$(INCLUDE_DIR)
	#
	@echo PETSC_DIR=$(PETSC_DIR)
	@echo PETSC_ARCH=$(PETSC_ARCH)
	#
	@echo MADUPITE_LIB_NAME=$(MADUPITE_LIB_NAME)
	@echo MADUPITE_LIB_FILE_NAME=$(MADUPITE_LIB_FILE_NAME)
	@echo MADUPITE_LIB=$(MADUPITE_LIB)
	@echo MADUPITE_INCLUDE=$(MADUPITE_INCLUDE)
	@echo MADUPITE_LDLIBS=$(MADUPITE_LDLIBS)
	@echo MADUPITE_LDFLAGS=$(MADUPITE_LDFLAGS)
	#
	@echo CC=$(CC)
	@echo CXX=$(CXX)
	@echo CFLAGS=$(CFLAGS)
	@echo CXXFLAGS=$(CXXFLAGS)
	@echo CPPFLAGS=$(CPPFLAGS)
	@echo LDFLAGS=$(LDFLAGS)
	@echo LDLIBS=$(LDLIBS)
	#
	@echo COMPILE.cc=$(COMPILE.cc)
	@echo LINK.cc=$(LINK.cc)
	#
	@echo SRCS=$(SRCS)
	@echo OBJS=$(OBJS)
	@echo DEPS=$(DEPS)
	@echo CLEANED_STUFF=$(CLEANED_STUFF)
	@echo FORMATTED_STUFF=$(FORMATTED_STUFF)
	#
	@echo PROJECT_ROOT=$(PROJECT_ROOT)
	@echo RESULT=$(RESULT)
	@echo

help:
	@echo "make [build|clean|format|help|print|run]"

# Phony targets should list the same stuff as help
.PHONY: build clean format help print run run2
